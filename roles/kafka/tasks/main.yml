- name: Download Kafka
  get_url:
    url: https://archive.apache.org/dist/kafka/3.6.1/kafka_2.13-3.6.1.tgz
    dest: /tmp/kafka.tgz

- name: Extract Kafka
  unarchive:
    src: /tmp/kafka.tgz
    dest: /opt/
    remote_src: yes

- name: Create symbolic link to /opt/kafka
  file:
    src: /opt/kafka_2.13-3.6.1
    dest: /opt/kafka
    state: link

- name: Ensure Kafka base directory is owned by ec2-user
  file:
    path: /opt/kafka
    state: directory
    recurse: yes
    owner: ec2-user
    group: ec2-user
    mode: '0755'

- name: Clean Kafka logs and data directories
  file:
    path: "{{ item }}"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'
    recurse: yes
  loop:
    - /tmp/kafka-logs
    - /tmp/kraft-combined-logs  # optional if kraft used

- name: Copy server.properties
  template:
    src: server.properties.j2
    dest: "{{ kafka_home }}/config/server.properties"
    owner: ec2-user
    group: ec2-user
    mode: '0644'

- name: Debug private IP
  debug:
    msg: "Private IP for {{ inventory_hostname }} is {{ hostvars[inventory_hostname].private_ip }}"


- name: Wait for ZooKeeper to be up (port 2181)
  wait_for:
    host: "{{ hostvars[inventory_hostname].private_ip }}"
    port: 2181
    state: started
    delay: 5
    timeout: 60

- name: Wait for ZooKeeper peers to be up
  wait_for:
    host: "{{ hostvars[item].private_ip }}"
    port: 2181
    state: started
    timeout: 60
  loop: "{{ groups['all'] | difference([inventory_hostname]) }}"
  when: hostvars[item].private_ip is defined
  delegate_to: localhost



- name: Start Kafka broker as ec2-user
  become: true
  become_user: ec2-user
  shell: "{{ kafka_home }}/bin/kafka-server-start.sh -daemon {{ kafka_home }}/config/server.properties"
  args:
    executable: /bin/bash
